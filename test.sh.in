#! /bin/sh


# Test script for Python wrappers
#
# If you don't have a test.conf, copy it from test.conf.in and modify
# as necessary.


# values determined from options passed to ./configure
PYTHON="@PYTHON@"
PYLIBDIR="@PYTHON_LIBP@"


# location of necessary files
dir=`dirname $0`
test -z "${dir}" && dir=.

CONFIG="${dir}/test.conf"
SCRIPT="${dir}/src/python/test.py"


# if not configured with python support, than this script can't run
if test "$PYTHON" = "" ; then
    echo "error: python support not built"
    exit 1
fi


# Verify a setting for $EDITOR
if test -z "${EDITOR}" ; then
    if sh -c "vim --version" 2>&1 1> /dev/null; then
       EDITOR=vim
    else
       # Should we check for vi?  At least provide a message if we
       # don't find/see it?
       EDITOR=vi
    fi
fi


# set up blank configuration data if necessary, and let the user edit it
if test ! -f "$CONFIG" ; then
    cp "$CONFIG.in" "$CONFIG"
    "$EDITOR" "$CONFIG"
fi


# obtain configuration data
. "$CONFIG"

if test -z "$mw_user" || test -z "$mw_host" ; then
    echo "Please modify $CONFIG to provide the correct server" \
	"and user information."
    exit 1
fi


# help message
if test "$1" = "help" ; then
	echo "\
Meanwhile Python Test Script -

  Execute to log in to server using test ID from test.conf and act as a
simple bot. See $SCRIPT for test script. This does not require
the meanwhile library or the python wrappers to be actually installed, just
compiled.

 Options:
    test.sh help      prints this helpful message
    test.sh           run the python interpreter and test bot
    test.sh debug     run the python interpreter and test bot from gdb
    test.sh pydoc     get pydoc information
    test.sh valgrind  run the python interpreter and test bot in valgrind
"
	exit 0
fi


# we don't require the module to be installed for the script to run
# but that means we'll need to put ourselves into a position to find
# the library and module

LD_LIBRARY_PATH="$PYLIBDIR/../":"${dir}/src/.libs/"
export LD_LIBRARY_PATH

PYTHONPATH="${dir}/src/python":"${dir}/src/python/.libs/":$PYTHONPATH
export PYTHONPATH


# debug
if test "$1" = "debug" ; then
    gdb --quiet --args "$PYTHON" -v "$SCRIPT"

# valgrind
elif test "$1" = "valgrind" ; then
    shift
    if sh -c "valgrind --version" 2>&1 1> /dev/null ; then
	valgrind $* "$PYTHON" "$SCRIPT"
    else
	echo "valgrind not found in \$PATH"
	exit 1
    fi

# pydoc
elif test "$1" = "pydoc" ; then
    shift
    "$PYTHON" -c "import pydoc; pydoc.cli();" $*

# test bot
else
    "$PYTHON" "$SCRIPT"
fi


#
# The End.

